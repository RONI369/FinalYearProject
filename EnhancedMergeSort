#include <stdio.h> 
#include <time.h> 
#include<stdlib.h>

#include<stdio.h>
#include<stdlib.h>


void merge(int c[],int l,int m,int h)
 {
  int n1,n2,i,j,k=l;
  
  n1=m-l+1;
  n2=h-m;
  
  int a[n1+1];
  int b[n2+1];
  
  for(i=1;i<=n1;i++)
    a[i]=c[l+i-1];
     
	
  for(j=1;j<=n2;j++)
    b[j]=c[m+j];
    
  a[n1+1]=99999;
  b[n2+1]=99999;
  
  i=1;
  j=1;
  
  for(k=l;k<=h;k++)
  {
  	if(a[i]>b[j])
  		c[k]=b[j++];
  	
  	else if(a[i]<b[j])
  		c[k]=a[i++];
  		
  	else if(a[i]==b[j])
  		{
  			c[k++]=a[i++];
  			c[k]=b[j++];
		}
  }
  
 }
 
void func(int c[],int l,int h)
{
	int m,k,temp,x;
	int a[h+1];
	m=0;
	k=l;
	while(k<=h)
	{
		if(c[k]>c[k+1])
		{
			temp=c[k];
			c[k]=c[k+1];
			c[k+1]=temp;
		}
		
		k=k+2;
    }
	
	k=l+1;
	
	while(k<=h)
	{
		a[m]=c[k];
		m=m+1;
		k=k+2;
	}
	
		
	x=l;
	k=l;
		
	while(k<=h)
	{
		c[x]=c[k];
		x=x+1;
		k=k+2;
	}
		
    k=0;
	while(k<m)
	{
		c[x]=a[k];
		x=x+1;
		k=k+1;
		
	}
		
 } 

void mergesort(int c[],int l,int h)
 { 
  int m;
  
   if(l<h)
    {
	 func(c,l,h);
	 m=(l+h)/2;
     mergesort(c,l,m);
     mergesort(c,m+1,h);
     merge(c,l,m,h);
   
	}
 }
 
 int main()
   {int i,n;
    
    printf("Enter size: ");
    scanf("%d",&n);
    
    int c[n+1];
    
    srand(time(0));
    for(i=1;i<=n;i++)
    	c[i]=rand();
    clock_t start,end; 
    start = clock(); 
    mergesort(c,1,n); 
    end=clock(); 
    for(i=1;i<=n;i++)
    	printf("%d ",c[i]);
    double total = ((double)(end-start))/CLOCKS_PER_SEC; // in seconds 
  
    printf("\n\n\nfun() took %f seconds to execute \n", total); 
    return 0; 
    
   }
